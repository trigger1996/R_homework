geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.text = element_text(colour = "red",angle=45,size=10,hjust=3,vjust=3,face="bold"))
ggplot(data = ann_result_train, aes(x=id, fill=group)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.text = element_text("",colour = "red",angle=45,size=10,hjust=3,vjust=3,face="bold"))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_fill_discrete(labels=c("Control", "Treatment 1", "Treatment 2"))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_fill_discrete(labels=c("Control", "Treatment 1", "Treatment 2"))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_fill_discrete(labels=c("Control", "Treatment 1", "Treatment 2"))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
labs(fill="Condition") +
scale_fill_discrete(labels=c("Control", "Treatment 1", "Treatment 2"))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1], legend = "1")) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
labs(fill="Condition") +
scale_fill_discrete(labels=c("Control", "Treatment 1", "Treatment 2"))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1], title = '233')) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1], title = '233')) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
q
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
a
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(labels = c('W','X','Y','Z'))
a
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
从啊啊
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
;
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none") +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none") +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
# https://blog.csdn.net/bone_ace/article/details/47284805
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('W','X'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title=NULL)) +    ##对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('W','X'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="233")) +    ##对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('W','X'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="图例")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id, fill = mycolors)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id, y=predict_val, color=mycolors))  +
geom_bar(stat='identity', aes(y=predict_val))
ggplot(data = ann_result_train, aes(x=id, y=predict_val))  +
geom_bar(stat='identity', aes(y=predict_val))
ggplot(data = ann_result_train, aes(x=id, y=predict_val, fill = id))  +
geom_bar(stat='identity', aes(y=predict_val))
ggplot(data = ann_result_train, aes(x=id, y=predict_val, fill = predict_val))  +
geom_bar(stat='identity', aes(y=predict_val))
ggplot(data = ann_result_train, aes(x=id, y=real_val, fill = predict_val))  +
geom_bar(stat='identity', aes(y=real_val))
ggplot(data = ann_result_train, aes(x=id, y=real_val, fill = real_val))  +
geom_bar(stat='identity', aes(y=real_val))
ggplot(data = ann_result_train, aes(x=id, y=real_val, fill = real_val, color = mycolors))  +
geom_bar(stat='identity', aes(y=real_val))
ggplot(data = ann_result_train, aes(x=id, y=real_val, fill = real_val))  +
geom_bar(stat='identity', aes(y=real_val))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill = predict_val)) +
geom_bar(stat='identity', aes(y=real_val, fill = real_val)) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill = predict_val)) +
geom_bar(stat='identity', aes(y=real_val)) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill = predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=real_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill = predict_val)) +
geom_bar(stat='identity', aes(y=real_val)) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=real_val, fill = real_val)) +
geom_bar(stat='identity', aes(y=predict_val)) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=real_val, fill = real_val)) +
geom_bar(stat='identity', aes(y=predict_val))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=real_val, fill = real_val)) +
geom_bar(stat='identity', aes(y=predict_val)) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id, fill = real_val)) +
geom_point(aes(y=real_val)) +
geom_bar(stat='identity', aes(y=predict_val)) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id, fill = real_val)) +
geom_point(aes(y=real_val)) +
geom_bar(stat='identity', aes(y=predict_val)) +
coord_cartesian(ylim = c(0,10000)) +
scale_fill_brewer()
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(fill = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c('预测结果','实际结果'), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c('预测结果','实际结果'), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果')) +
scale_fill_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果')) +
guides(fill=guide_legend(title="数据类型2")) +
scale_fill_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果2','实际结果2'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=real_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果')) +
guides(fill=guide_legend(title="数据类型2")) +
scale_fill_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果2','实际结果2'))
all_packages = .packages(all.available=T)
if (which(all_packages == 'stringr') == 0) {
install.packages("stringr")
}
library("stringr")
# 安装ggplot和ggplot2
if (which(all_packages == 'ggplot2') == 0) {
install.packages("ggplot2")
}
library("ggplot2")
if (which(all_packages == 'RColorBrewer') == 0) {
install.packages("RColorBrewer")
}
library("RColorBrewer")
if (which(all_packages == 'wordcloud2') == 0) {
install.packages("wordcloud2")
}
library("wordcloud2")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=real_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果')) +
guides(fill=guide_legend(title="数据类型2")) +
scale_fill_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果2','实际结果2'))
library("ggplot2")
library("ggplot2")
install.packages("Rcpp")
library("ggplot2")
ggplot(data = ann_result_train, aes(x=id, y=real_val, fill = real_val))  +
geom_bar(stat='identity', aes(y=real_val))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=real_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果')) +
guides(fill=guide_legend(title="数据类型2")) +
scale_fill_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果2','实际结果2'))
View(p)
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=real_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=FALSE) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果')) +
guides(fill=guide_legend(title="数据类型2")) +
scale_fill_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果2','实际结果2'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=real_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=FALSE) +    ## 如果是NULL, 就是对color产生的图例去掉标题
guides(fill=guide_legend(title="数据类型")) +
scale_fill_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果'))
View(wordindex_context)
View(word_actual)
View(wordindex_context)
View(wordindex_context)
View(wordlist_test)
View(word_actual_test)
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=real_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x = id, y = predict_val, fill = real_val)) +
geom_bar(stat='identity',position=position_dodge(), width = 5) +
labs(x=NULL,y=NULL,fill=NULL)+    #可自定义标签名字
coord_cartesian(ylim = c(0,10000))  #设置下面一半的值域#ggplot(mtcars,aes(x=cyl,y=mpg,fill=vs))+geom_bar(stat="identity",position="dodge")
ggplot(data = ann_result_train, aes(x = id, y = predict_val, fill = real_val)) +
geom_bar(stat='identity',position=position_dodge(), width = 5) +
labs(x=NULL,y=NULL,fill=NULL)
ggplot(data = ann_result_train, aes(x = id, y = predict_val)) +
geom_bar(stat='identity',position=position_dodge()) +
labs(x=NULL,y=NULL,fill=NULL)
ggplot(data = ann_result_train, aes(x = id, y = predict_val, fill = real_val)) +
geom_bar(stat='identity',position=position_dodge(), width = 5) +
labs(x=NULL,y=NULL,fill=NULL)+    #可自定义标签名字
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x = id, y = predict_val, fill = real_val)) +
geom_bar(stat='identity',position=position_dodge(), width = 5) +
labs(x=NULL,y=NULL,fill=NULL)
ggplot(data = ann_result_train, aes(x = id, y = predict_val, fill = predict_val)) +
geom_bar(stat='identity',position=position_dodge(), width = 5) +
labs(x=NULL,y=NULL,fill=NULL)
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color="blue") +
geom_line(aes(y=real_val, color="cyan"))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=real_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
p = ggplot(ann_result_train, aes(x = id,y = predict_val,fill = real_val))+
#####这部分的position_dodge(width=0.8)大于宽width = 0.6点，可以使得分组内柱子之间有缝隙，而不是贴合。
geom_bar(stat ="identity",width = 0.6,position = position_dodge(width=0.8))+
labs(x = "",y = "", title = "test")+
###########文字的position设置类似bar的position
#geom_text(aes(label = ann_result_train$id),position=position_dodge(width = 0.9),size = 5,vjust = -0.25)+
guides(fill = guide_legend(reverse = F))#+
#theme(plot.title = element_text(size = 25,face = "bold", vjust = 0.5, hjust = 0.5),
#      legend.title = element_blank(),
#      legend.text = element_text(size = 18, face = "bold"),
#      legend.position = 'right',
#      legend.key.size=unit(0.8,'cm'))
print(p)
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=real_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=real_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果')) +
guides(fill=guide_legend(title="数据类型2")) +
scale_fill_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果2','实际结果2'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=real_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=FALSE) +    ## 如果是NULL, 就是对color产生的图例去掉标题
guides(fill=guide_legend(title="数据类型")) +
scale_fill_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=real_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果')) +
guides(fill=guide_legend(title="数据类型2")) +
scale_fill_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果2','实际结果2'))
wordcloud2(word_cloud, color = "random-light",shape = 'A')
library("wordcloud2")
wordcloud2(word_cloud, color = "random-light",shape = 'A', fontFamily = "等线")
ann_weight_min = min(ann_weight[,2])
ann_weight_norm = ann_weight[,2] + abs(ann_weight_min) + 1
word_cloud = c(wordindex_context[,2], wordindex_title[,2])
word_cloud = data.frame(word=word_cloud, freq=ann_weight_norm[1:4621])
wordcloud2(word_cloud, color = "random-light",shape = 'A', fontFamily = "等线")
wordcloud2(word_cloud, color = "random-light",shape = 'star', fontFamily = "等线")
wordcloud2(word_cloud, color = "random-light",shape = 'pentagon', fontFamily = "等线")
figPath = system.file("examples/t.png",package = "wordcloud2")
wordcloud2(word_cloud, figPath = figPath, size = 1.5,color = "skyblue")
figPath = system.file("examples/t.png",package = "wordcloud2")
wordcloud2(word_cloud, figPath = figPath, size = 0.2,color = "skyblue")
wordcloud2(word_cloud, figPath = figPath, size = 0.2,color = "random-light")
wordcloud2(word_cloud, shape = "triangle", size = 0.2,color = "random-light")
wordcloud2(word_cloud, color = "random-light", backgroundColor = "white")
wordcloud2(word_cloud, color = "random-light",shape = 'pentagon', fontFamily = "等线")
wordcloud2(word_cloud, size = 0.2, shape='cardioid',color = 'random-dark', backgroundColor = "white",fontFamily = "微软雅黑")
wordcloud2(word_cloud, size = 0.4, shape='cardioid',color = 'random-dark', backgroundColor = "white",fontFamily = "微软雅黑")
