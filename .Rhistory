#####这部分的position_dodge(width=0.8)大于宽width = 0.6点，可以使得分组内柱子之间有缝隙，而不是贴合。
geom_bar(stat ="identity",width = 0.6,position = position_dodge(width=0.8))+
labs(x = "",y = "", title = "test")+
###########文字的position设置类似bar的position
geom_text(aes(label = ann_result_train$id),position=position_dodge(width = 0.9),size = 5,vjust = -0.25)+
guides(fill = guide_legend(reverse = F))+
theme(plot.title = element_text(size = 25,face = "bold", vjust = 0.5, hjust = 0.5),
legend.title = element_blank(),
legend.position = 'right',
legend.key.size=unit(0.8,'cm'))
print(p)
p = ggplot(ann_result_train, aes(x = id,y = predict_val,fill = real_val))+
#####这部分的position_dodge(width=0.8)大于宽width = 0.6点，可以使得分组内柱子之间有缝隙，而不是贴合。
geom_bar(stat ="identity",width = 0.6,position = position_dodge(width=0.8))+
labs(x = "",y = "", title = "test")+
###########文字的position设置类似bar的position
#geom_text(aes(label = ann_result_train$id),position=position_dodge(width = 0.9),size = 5,vjust = -0.25)+
guides(fill = guide_legend(reverse = F))+
theme(plot.title = element_text(size = 25,face = "bold", vjust = 0.5, hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 18, face = "bold"),
legend.position = 'right',
legend.key.size=unit(0.8,'cm'))
print(p)
p = ggplot(ann_result_train, aes(x = id,y = predict_val,fill = real_val))+
#####这部分的position_dodge(width=0.8)大于宽width = 0.6点，可以使得分组内柱子之间有缝隙，而不是贴合。
geom_bar(stat ="identity",width = 0.6,position = position_dodge(width=0.8))+
labs(x = "",y = "", title = "test")+
###########文字的position设置类似bar的position
geom_text(aes(label = ann_result_train$id),position=position_dodge(width = 0.9),size = 5,vjust = -0.25)+
guides(fill = guide_legend(reverse = F))+
theme(plot.title = element_text(size = 25,face = "bold", vjust = 0.5, hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 18, face = "bold"),
legend.position = 'right',
legend.key.size=unit(0.8,'cm'))
print(p)
p = ggplot(ann_result_train, aes(x = id,y = predict_val,fill = real_val))+
#####这部分的position_dodge(width=0.8)大于宽width = 0.6点，可以使得分组内柱子之间有缝隙，而不是贴合。
geom_bar(stat ="identity",width = 0.6,position = position_dodge(width=0.8))+
labs(x = "",y = "", title = "test")+
###########文字的position设置类似bar的position
#geom_text(aes(label = ann_result_train$id),position=position_dodge(width = 0.9),size = 5,vjust = -0.25)+
guides(fill = guide_legend(reverse = F))
print(p)
p = ggplot(ann_result_train, aes(x = id,y = predict_val,fill = real_val))+
#####这部分的position_dodge(width=0.8)大于宽width = 0.6点，可以使得分组内柱子之间有缝隙，而不是贴合。
geom_bar(stat ="identity",width = 0.6,position = position_dodge(width=0.8))+
labs(x = "",y = "", title = "test")+
###########文字的position设置类似bar的position
#geom_text(aes(label = ann_result_train$id),position=position_dodge(width = 0.9),size = 5,vjust = -0.25)+
guides(fill = guide_legend(reverse = F))#+
#theme(plot.title = element_text(size = 25,face = "bold", vjust = 0.5, hjust = 0.5),
#      legend.title = element_blank(),
#      legend.text = element_text(size = 18, face = "bold"),
#      legend.position = 'right',
#      legend.key.size=unit(0.8,'cm'))
print(p)
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
guides(fill = guide_legend(reverse = F))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1], show_guide = FALSE) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1], show.legend =  FALSE) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2]), , show.legend =  FALSE) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1], show.legend =  FALSE) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2]), , show.legend =  FALSE) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_color_discrete(breaks = c('B','C','A','D'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1], show.legend =  FALSE) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2]), , show.legend =  FALSE) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_color_discrete(breaks = c('B','C','A','D'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1], legend.text = '233') +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2]), legend.text = '23333') +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_color_discrete(breaks = c('B','C','A','D'))
ggplot(data = ann_result_train, aes(x=id), colours = mycolors) +
geom_point(aes(y=predict_val)) +
geom_bar(stat='identity', aes(y=predict_val)) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id), colors = mycolors) +
geom_point(aes(y=predict_val)) +
geom_bar(stat='identity', aes(y=predict_val)) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id, colors = mycolors)) +
geom_point(aes(y=predict_val)) +
geom_bar(stat='identity', aes(y=predict_val)) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id, colors = mycolors[1:2])) +
geom_point(aes(y=predict_val)) +
geom_bar(stat='identity', aes(y=predict_val)) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
mycolors_c = mycolors
len = dim(ann_result_train)[1] / 10
for (i in 1 : len) {
mycolors_c = c(mycolors_c, mycolors)
}
mycolors_c = mycolors
len = dim(ann_result_train)[1] / 9
for (i in 1 : len) {
mycolors_c = c(mycolors_c, mycolors)
}
ggplot(data = ann_result_train, aes(x=id, colors = mycolors_c[1:dim(ann_result_train)[1]])) +
geom_point(aes(y=predict_val)) +
geom_bar(stat='identity', aes(y=predict_val)) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
mycolors_c[1:dim(ann_result_train)[1]
ggplot(data = ann_result_train, aes(x=id, colors = mycolors_c[1:dim(ann_result_train)[1]])) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id, colors = mycolors_c[1:dim(ann_result_train)[1]]))
ggplot(data = ann_result_train, aes(x=id, colors = mycolors_c[1:dim(ann_result_train)[1]])) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
0
ggplot(data = ann_result_train, aes(x=id, colors = mycolors_c[1:dim(ann_result_train)[1]])) +
geom_point(aes(y=predict_val, color=mycolors[1]))
ggplot(data = ann_result_train, aes(x=id, colors = mycolors_c[1:dim(ann_result_train)[1]])) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2]))
ggplot(data = ann_result_train, aes(x=id, colors = mycolors_c[1:dim(ann_result_train)[1]])) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2]))
ggplot(data = ann_result_train, aes(x=id, colors = mycolors_c[1:dim(ann_result_train)[1]])) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.text = element_text(colour = "red",angle=45,size=10,hjust=3,vjust=3,face="bold"))
ggplot(data = ann_result_train, aes(x=id, fill=group)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.text = element_text("",colour = "red",angle=45,size=10,hjust=3,vjust=3,face="bold"))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_fill_discrete(labels=c("Control", "Treatment 1", "Treatment 2"))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_fill_discrete(labels=c("Control", "Treatment 1", "Treatment 2"))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_fill_discrete(labels=c("Control", "Treatment 1", "Treatment 2"))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
labs(fill="Condition") +
scale_fill_discrete(labels=c("Control", "Treatment 1", "Treatment 2"))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1], legend = "1")) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
labs(fill="Condition") +
scale_fill_discrete(labels=c("Control", "Treatment 1", "Treatment 2"))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1], title = '233')) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1], title = '233')) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
q
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
a
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(labels = c('W','X','Y','Z'))
a
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
从啊啊
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
;
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
labs(x=NULL,y=NULL,fill=NULL) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none") +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none") +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
# https://blog.csdn.net/bone_ace/article/details/47284805
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
theme(legend.position="none")
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val), color=mycolors[1]) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(breaks = c('A','B','C','D'), labels = c('W','X','Y','Z'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('W','X'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title=NULL)) +    ##对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('W','X'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="233")) +    ##对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('W','X'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="图例")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id, fill = mycolors)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id, y=predict_val, color=mycolors))  +
geom_bar(stat='identity', aes(y=predict_val))
ggplot(data = ann_result_train, aes(x=id, y=predict_val))  +
geom_bar(stat='identity', aes(y=predict_val))
ggplot(data = ann_result_train, aes(x=id, y=predict_val, fill = id))  +
geom_bar(stat='identity', aes(y=predict_val))
ggplot(data = ann_result_train, aes(x=id, y=predict_val, fill = predict_val))  +
geom_bar(stat='identity', aes(y=predict_val))
ggplot(data = ann_result_train, aes(x=id, y=real_val, fill = predict_val))  +
geom_bar(stat='identity', aes(y=real_val))
ggplot(data = ann_result_train, aes(x=id, y=real_val, fill = real_val))  +
geom_bar(stat='identity', aes(y=real_val))
ggplot(data = ann_result_train, aes(x=id, y=real_val, fill = real_val, color = mycolors))  +
geom_bar(stat='identity', aes(y=real_val))
ggplot(data = ann_result_train, aes(x=id, y=real_val, fill = real_val))  +
geom_bar(stat='identity', aes(y=real_val))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill = predict_val)) +
geom_bar(stat='identity', aes(y=real_val, fill = real_val)) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill = predict_val)) +
geom_bar(stat='identity', aes(y=real_val)) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill = predict_val, color=mycolors[1])) +
geom_bar(stat='identity', aes(y=real_val, color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill = predict_val)) +
geom_bar(stat='identity', aes(y=real_val)) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=real_val, fill = real_val)) +
geom_bar(stat='identity', aes(y=predict_val)) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=real_val, fill = real_val)) +
geom_bar(stat='identity', aes(y=predict_val))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=real_val, fill = real_val)) +
geom_bar(stat='identity', aes(y=predict_val)) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id, fill = real_val)) +
geom_point(aes(y=real_val)) +
geom_bar(stat='identity', aes(y=predict_val)) +
coord_cartesian(ylim = c(0,10000))
ggplot(data = ann_result_train, aes(x=id, fill = real_val)) +
geom_point(aes(y=real_val)) +
geom_bar(stat='identity', aes(y=predict_val)) +
coord_cartesian(ylim = c(0,10000)) +
scale_fill_brewer()
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(fill = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c('预测结果','实际结果'), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c('预测结果','实际结果'), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[1],mycolors[2]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果')) +
scale_fill_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果'))
ggplot(data = ann_result_train, aes(x=id)) +
geom_point(aes(y=predict_val, fill=mycolors[1], color=mycolors[1])) +
geom_bar(stat='identity', aes(y=predict_val, fill=mycolors[2], color=mycolors[2])) +
coord_cartesian(ylim = c(0,10000)) +
guides(color=guide_legend(title="数据类型")) +    ## 如果是NULL, 就是对color产生的图例去掉标题
scale_colour_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果','实际结果')) +
guides(fill=guide_legend(title="数据类型2")) +
scale_fill_discrete(breaks = c(mycolors[2],mycolors[1]), labels = c('预测结果2','实际结果2'))
